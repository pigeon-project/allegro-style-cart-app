name: Plan
on:
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22 (required by @github/copilot >=0.0.336)
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Copilot CLI
        run: npm install -g @github/copilot

      - name: Verify spec directory
        run: |
          if [ ! -d spec ]; then
            echo "::error::spec directory missing"
            exit 1
          fi
          if [ ! -f spec/SPEC.md ]; then
            echo "::warning::spec/SPEC.md not found; listing files for diagnostics"
            find spec -maxdepth 2 -type f -print
          fi

      - name: Ensure labels exist
        run: |
          gh label create frontend --description "Frontend development tasks" --color "1D76DB" 2>/dev/null || true
          gh label create backend  --description "Backend development tasks"  --color "0E8A16" 2>/dev/null || true

      - name: Create dir for issues if not exists
        run: mkdir -p issues
      - name: Plan work
        working-directory: .
        env:
          GH_TOKEN: ${{ secrets.COPILOT_PAT }}
        run: |
          PROMPT="Read all files under ./spec starting from ./spec/SPEC.md for repository '$GITHUB_REPOSITORY'. 
          Break the required work into small, developer-friendly chunks.
          For each chunk produce ONE markdown file inside ./issues named issue_<n>.md (starting at 1, continuous numbering).
          FILE FORMAT:
          labels: comma-separated labels from set {frontend,backend}
          title: <concise issue title without quotes>
          body:
          <rich markdown body, may contain headings, bullet lists, blank lines>
          
          Body MUST include:
          - Description paragraph.
          - '## Acceptance Criteria' heading with bullet list (- item).
          - '## References' heading referencing specification sections.
          - Final line EXACT: 'Start with the development branch and create pull request to it as well.'
          
          Rules:
          - Do NOT output anything else outside the issue_*.md files.
          - Ensure every SPEC requirement (including responsiveness) is covered by at least one issue.
          - Maintain ordering so dependencies have lower numbers.
          
          Print files while creating them for logging."
          
          echo "--- PROMPT START ---"
          echo "$PROMPT"
          echo "--- PROMPT END ---"
          
          copilot -p "${PROMPT}" --allow-all-tools --deny-tool 'shell(rm)' --deny-tool 'shell(sudo)'

          COUNT=$(ls issues/issue_*.md 2>/dev/null | wc -l | tr -d ' ')
          if [ "$COUNT" -eq 0 ]; then
            echo "::error::No issue_*.md files generated"
            ls -al issues
            exit 1
          fi

          echo "Generated $COUNT issue files."

      - name: Create Github issues
        working-directory: .
        run: |
          python3 .github/scripts/create_issues.py
